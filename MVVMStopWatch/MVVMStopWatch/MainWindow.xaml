<Window x:Class="MVVMStopWatch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVMStopWatch"
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        Icon="/Icons/timer.png"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="16"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="#2D2D30"
        WindowStartupLocation="CenterScreen"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="Stopwatch" Height="520" Width="400">

    <!-- Add value converters -->
    <Window.Resources>
        <local:TimeNumberFormatConverter x:Key="timeNumberFormatConverter" />
        <local:BoolenNotConverter x:Key="notConverter" />
        <local:BoolenVisibilityConverter x:Key="bisibilityConverter" />
        <local:AngleConverter x:Key="angleConverter"/>
    </Window.Resources>

    <Border BorderBrush="#2D2D30" BorderThickness="1">
        <Grid>
            <StackPanel>
                <materialDesign:Card Padding="15" Margin="14">
                    
                    <!-- Show Elapsed and Lap time -->
                    <StackPanel>
                        <TextBlock Margin="5 5">
                        <Run>Elapsed time: </Run>
                        <Run Text="{Binding Hours, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}}" />
                        <Run>:</Run>
                        <Run Text="{Binding Minutes, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}, ConverterParameter=d2}" />
                        <Run>:</Run>
                        <Run Text="{Binding Seconds, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}}" />
                        </TextBlock>

                        <TextBlock Margin="5 5">
                        <Run>Lap time: </Run>
                        <Run Text="{Binding LapHours, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}}" />
                        <Run>:</Run>
                        <Run Text="{Binding LapMinutes, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}, ConverterParameter=d2}" />
                        <Run>:</Run>
                        <Run Text="{Binding LapSeconds, Mode=OneWay,
                            Converter={StaticResource timeNumberFormatConverter}}" />
                        </TextBlock>
                    </StackPanel>
                </materialDesign:Card>

                <!-- Four main buttons -->
                <StackPanel Orientation="Horizontal" Margin="50 0">
                    <Button 
                    IsEnabled="{Binding IsRunning, Converter={StaticResource notConverter}}"
                    Width="50"
                    Height="50"
                    Margin="12 5 10 5"
                    Command="{Binding StartCommand}"
                    Style="{DynamicResource MaterialDesignFloatingActionButton}" >
                        <Image Source="/Icons/play.png" Height="40" Width="40"/>
                    </Button>
                    <Button 
                    IsEnabled="{Binding IsRunning}"
                    Width="50"
                    Height="50"
                    Margin="14 5 10 5"
                    Command="{Binding StopCommand}"
                    Style="{DynamicResource MaterialDesignFloatingActionButton}" >
                        <Image Source="/Icons/pause.png" Height="40" Width="40"/>
                    </Button>
                    <Button 
                    Width="50"
                    Height="50"
                    Margin="14 5 10 5"
                    Style="{DynamicResource MaterialDesignFloatingActionButton}"
                    Command="{Binding ResetCommand}" >
                        <Image Source="/Icons/reset.png" Height="40" Width="40"/>
                    </Button>
                    <Button 
                    IsEnabled="{Binding IsRunning}"
                    Width="50"
                    Height="50"
                    Margin="14 5 10 5"
                    Style="{DynamicResource MaterialDesignFloatingActionButton}"
                    Command="{Binding LapCommand}" >
                        <Image Source="/Icons/notebook.png" Height="40" Width="40"/>
                    </Button>
                </StackPanel>

                <!-- Visual clock model -->
                <Grid x:Name="clockGrid">
                    <Ellipse Width="300" Height="300" Stroke="Black" StrokeThickness="2">
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#673AB7"/>
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Rectangle RenderTransformOrigin="0.5,0.5" Width="2" Height="150" Fill="Black">
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-60"/>
                                <RotateTransform Angle="{Binding Seconds, 
                    Converter={StaticResource ResourceKey=angleConverter},
                    ConverterParameter=Seconds}"/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle RenderTransformOrigin="0.5,0.5" Width="4" Height="100" Fill="#FFFFFF">
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-50"/>
                                <RotateTransform Angle="{Binding Minutes, 
                    Converter={StaticResource ResourceKey=angleConverter},
                    ConverterParameter=Minutes}"/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle RenderTransformOrigin="0.5,0.5" Width="1" Height="150" 
                           Fill="#FFFFFF">
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-60"/>
                                <RotateTransform Angle="{Binding LapSeconds, 
                    Converter={StaticResource ResourceKey=angleConverter}, 
                    ConverterParameter=Seconds}"/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle RenderTransformOrigin="0.5,0.5" Width="2" Height="100" 
                           Fill="#FFFFFF">
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-50"/>
                                <RotateTransform Angle="{Binding LapMinutes, 
                    Converter={StaticResource ResourceKey=angleConverter},
                    ConverterParameter=Minutes}"/>
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Ellipse Width="10" Height="10" Fill="Black"/>

                </Grid>
            </StackPanel>
        </Grid>
    </Border>
</Window>
